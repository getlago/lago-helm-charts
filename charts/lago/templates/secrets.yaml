{{ if not .Values.secrets.lagoLicense.useExisting  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "lago.lagoLicenseSecretName" . }}
  labels:
    {{- include "lago.labels" . | nindent 4 }}
type: Opaque
data:
  {{ .Values.secrets.lagoLicense.secretKey }}: {{ .Values.lagoConfig.license.value | b64enc | quote }}
{{ end }}
{{ if not .Values.secrets.lagoCrypt.useExisting  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "lago.lagoCryptSecretName" . }}
  labels:
    {{- include "lago.labels" . | nindent 4 }}
type: Opaque
data:
  rsaPrivateKey: {{ .Values.lagoConfig.lagoCrypt.rsaPrivateKey | default (genPrivateKey "rsa") | b64enc | b64enc | quote }}
  secretKeyBase: {{ .Values.lagoConfig.lagoCrypt.secretKeyBase | default (randAlphaNum 64) | b64enc | b64enc | quote }}
  encryptionPrimaryKey: {{ .Values.lagoConfig.lagoCrypt.encryptionPrimaryKey | default (randAlphaNum 32) | b64enc | b64enc | quote }}
  encryptionDeterministicKey: {{ .Values.lagoConfig.lagoCrypt.encryptionDeterministicKey | default (randAlphaNum 32) | b64enc | b64enc | quote }}
  encryptionKeyDerivationSalt: {{ .Values.lagoConfig.lagoCrypt.encryptionKeyDerivationSalt | default (randAlphaNum 32) | b64enc | b64enc | quote }}
{{ end }}
{{ if not .Values.secrets.postgresql.useExisting  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "lago.postgresqlSecretName" . }}
  labels:
    {{- include "lago.labels" . | nindent 4 }}
type: Opaque
data:
  {{ .Values.secrets.postgresql.secretKey }}: {{ .Values.lagoConfig.postgresql.password | b64enc | quote }}
{{ end }}

{{ if not .Values.secrets.redis.useExisting  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "lago.redisSecretName" . }}
  labels:
    {{- include "lago.labels" . | nindent 4 }}
type: Opaque
data:
  {{ .Values.secrets.redis.secretKey }}: {{ .Values.lagoConfig.redis.password | b64enc | quote }}
{{ end }}

{{ if and .Values.lagoConfig.smtp.enabled (not .Values.secrets.smtp.useExisting)  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "lago.smtpSecretName" . }}
  labels:
    {{- include "lago.labels" . | nindent 4 }}
type: Opaque
data:
  {{ .Values.secrets.smtp.secretKey }}: {{ .Values.lagoConfig.smtp.password | b64enc | quote }}
{{ end }}

{{ if and .Values.lagoConfig.newRelic.enabled (not .Values.secrets.newRelic.useExisting)  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "lago.newRelicSecretName" . }}
  labels:
    {{- include "lago.labels" . | nindent 4 }}
type: Opaque
data:
  {{ .Values.secrets.newRelic.secretKey }}: {{ .Values.lagoConfig.newRelic.apiKey | b64enc | quote }}
{{ end }}

{{ if and .Values.lagoConfig.s3.enabled (not .Values.secrets.s3.useExisting)  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "lago.s3SecretName" . }}
  labels:
    {{- include "lago.labels" . | nindent 4 }}
type: Opaque
data:
  {{ .Values.secrets.s3.secretKey }}: {{ .Values.lagoConfig.s3.aws.secretAccessKey | b64enc | quote }}
{{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-secrets
type: Opaque
data:
  {{ $secretObj := (lookup "v1" "Secret" .Release.Namespace "{{ .Release.Name }}-secrets") | default dict }}
  {{ $secretData := (get $secretObj "data" | default dict) }}
  {{ $rsaPrivateKey := (get $secretData "rsaPrivateKey") | default (genPrivateKey "rsa" | b64enc | b64enc) }}
  rsaPrivateKey: {{ $rsaPrivateKey | quote }}

  {{ $secretKeyBase := (get $secretData "secretKeyBase") | default (randAlphaNum 64 | b64enc | b64enc) }}
  secretKeyBase: {{ $secretKeyBase | quote }}

  {{ $encryptionPrimaryKey := (get $secretData "encryptionPrimaryKey") | default (randAlphaNum 32 | b64enc | b64enc) }}
  encryptionPrimaryKey: {{ $encryptionPrimaryKey | quote }}

  {{ $encryptionDeterministicKey := (get $secretData "encryptionDeterministicKey") | default (randAlphaNum 32 | b64enc | b64enc) }}
  encryptionDeterministicKey: {{ $encryptionDeterministicKey | quote }}

  {{ $encryptionKeyDerivationSalt := (get $secretData "encryptionKeyDerivationSalt") | default (randAlphaNum 32 | b64enc | b64enc) }}
  encryptionKeyDerivationSalt: {{ $encryptionKeyDerivationSalt | quote }}
