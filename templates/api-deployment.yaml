apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.lago.service: {{ .Release.Name }}-api
  name: {{ .Release.Name }}-api
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      io.lago.service: {{ .Release.Name }}-api
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.lago.service: {{ .Release.Name }}-api
        {{- range $key, $value := .Values.api.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
        {{- range $key, $value := .Values.api.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{ if .Values.postgresql.enabled }}
        - name: wait-for-postgresql
          image: "docker.io/bitnami/kubectl:{{ include "kubectlVersion" . }}"
          args:
            - wait
            - pod/{{ .Release.Name }}-postgresql-0
            - --for=condition=ready
            - --timeout=180s
        {{ end }}
        {{ if .Values.redis.enabled }}
        - name: wait-for-redis
          image: "docker.io/bitnami/kubectl:{{ include "kubectlVersion" . }}"
          args:
            - wait
            - pod/{{ .Release.Name }}-redis-master-0
            - --for=condition=ready
            - --timeout=180s
        {{ end }}
        {{ if .Values.minio.enabled }}
        - name: wait-for-minio
          image: "docker.io/bitnami/kubectl:{{ include "kubectlVersion" . }}"
          args:
            - wait
            - pod/{{ .Release.Name }}-minio-0
            - --for=condition=ready
            - --timeout=180s
        {{ end }}
        - name: wait-for-migrations
          image: "docker.io/bitnami/kubectl:{{ include "kubectlVersion" . }}"
          args:
            - wait
            - job/{{ include "migrateJobName" . }}
            - --for=condition=complete
            - --timeout=180s
      containers:
        - args: ["bundle", "exec", "rails", "s", "-b", "::"]
          env:
            {{- with .Values.api.extraEnv }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          image: getlago/api:v{{ .Values.version }}
          name: {{ .Release.Name }}-api
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          {{- with .Values.api.resources }}
          resources:
            {{- toYaml . | nindent 12}}
          {{- end }}
          {{- if and (not .Values.global.s3.enabled) (not .Values.minio.enabled) }}
          volumeMounts:
            - mountPath: /app/storage
              name: {{ .Release.Name }}-storage-data
          {{ end }}
      restartPolicy: Always
      {{- if and (not .Values.global.s3.enabled) (not .Values.minio.enabled) }}
      volumes:
        - name: {{ .Release.Name }}-storage-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-storage-data
      {{ end }}
      serviceAccountName: {{ .Values.global.serviceAccountName | default (printf "%s-serviceaccount" .Release.Name) }}
